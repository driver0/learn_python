一．dict（dictionary:字典）:Python内置了字典，在其他语言中称为map。
1.	Dict特点：
（1）使用键值（key-value）存储，具有极快的查找速度。（因为它采用了查字典式的原理：现在字典的索引表里查这个字对应的页码，然后翻到该页，找到这个字。无论找哪个字，这种查找速度非常快，不会随后则字典大小的增加而变慢。）
（2）这种key-value存储方式，在放进去的石油，必须根据key算出value的存放位置，这样，取的时候才能根据key直接拿到value。
（3）和list比较，dict有以下几个特点：
查找和插入的速度极快，不会随着key的增加而变慢；
需要占用大量的内存，内存浪费多。
而list相反：
查找和插入的时间随着元素的增加而增加；
占用空间小，浪费内存很少。
所以，dict是用空间来换取时间的一种方法。
（4）需要牢记的第一条就是dict的key必须是不可变对象。
2.dict的增删改查   
增：初始化时指定；
字典名[键名]=键值；如果键本身对应的有键值，则覆盖。
删：要删除一个key，用pop(key)方法，对应的value也会从dict中删除：
查：字典名[键名]；若键名不存在，则dict报错。（避免这种错误的两种方法，一是通过in判断，例如：键名 in 字典名；二是通过字典的get（）方法，看返回值，返回值可以用第二个参数指定，例如：字典名.get(键名)）
二.	set:set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。
1.	要创建一个set，需要提供一个list作为输入集合： 
s = set([1, 2, 3])
2.	重复元素在set中自动被过滤.
3.	Set的增删改查
增：add(key)。s.add(4)
删：remove(key)。s.remove(4)
改：replace('a', 'A')。a.replace('a', 'A')
查：set名字
三．函数：
四．抽象：借助抽象，我们才能不关心底层的具体计算过程，而直接在更高的层次上思考问题。
写计算机程序也是一样，函数就是最基本的一种代码抽象的方式。


